import React, { useState } from 'react';import { View, Text, ScrollView, TouchableOpacity, KeyboardAvoidingView, Platform } from 'react-native';import BasicInfoStep from '../TaskPageComponents/BasicInfoStep';import CategoryStep from '../TaskPageComponents/CategoryStep';import PaymentStep from '../TaskPageComponents/PaymentStep';import PreviewStep from '../TaskPageComponents/PreviewStep';import { Ionicons } from '@expo/vector-icons';const NewTaskForm = ({ onTaskCreated, isInBottomSheet = false }) => {  const [currentStep, setCurrentStep] = useState(1);  const [formData, setFormData] = useState({    title: '',    description: '',    category: '',    deadline: null,    isPaid: false,    budget: '',  });  const steps = [    { id: 1, title: 'Basic Info' },    { id: 2, title: 'Category & Deadline' },    { id: 3, title: 'Payment' },    { id: 4, title: 'Preview' },  ];  const nextStep = () => {    if (currentStep < steps.length) {      setCurrentStep(currentStep + 1);    }  };  const prevStep = () => {    if (currentStep > 1) {      setCurrentStep(currentStep - 1);    }  };  const updateFormData = (field, value) => {    setFormData(prev => ({ ...prev, [field]: value }));  };  const handleSubmit = () => {    console.log('Form submitted:', formData);    if (onTaskCreated) {      onTaskCreated();    }  };  const renderStep = () => {    switch (currentStep) {      case 1:        return <BasicInfoStep formData={formData} updateFormData={updateFormData} />;      case 2:        return <CategoryStep formData={formData} updateFormData={updateFormData} />;      case 3:        return <PaymentStep formData={formData} updateFormData={updateFormData} />;      case 4:        return <PreviewStep formData={formData} />;      default:        return <BasicInfoStep formData={formData} updateFormData={updateFormData} />;    }  };  return (    <KeyboardAvoidingView       behavior={Platform.OS === 'ios' ? 'padding' : 'height'}      style={{ flex: 1, backgroundColor: '#ffffff' }}    >      {/* Header - Optimized for bottom sheet */}      <View style={{         flexDirection: 'row',         justifyContent: 'space-between',         alignItems: 'center',         paddingHorizontal: 20,         paddingVertical: 16,        borderBottomWidth: 1,        borderBottomColor: '#f1f5f9'      }}>        <View style={{ flex: 1 }}>          <Text style={{ fontSize: 14, color: '#64748b', marginTop: 4 }}>            Step {currentStep} of {steps.length} • {steps[currentStep - 1]?.title}          </Text>        </View>      </View>      {/* Progress Bar */}      <View style={{ paddingHorizontal: 20, paddingVertical: 12, backgroundColor: '#f8fafc' }}>        <View style={{ width: '100%', backgroundColor: '#e2e8f0', borderRadius: 10, height: 6 }}>          <View             style={{               backgroundColor: '#6366f1',               borderRadius: 10,               height: 6,              width: `${(currentStep / steps.length) * 100}%`             }}          />        </View>      </View>      {/* Form Content */}      <ScrollView         style={{ flex: 1 }}        contentContainerStyle={{ flexGrow: 1 }}        showsVerticalScrollIndicator={false}        keyboardShouldPersistTaps="handled"      >        <View style={{ flex: 1, paddingBottom: 16 }}>          {renderStep()}        </View>      </ScrollView>      {/* Navigation Buttons */}      <View style={{         paddingHorizontal: 20,         paddingVertical: 16,         backgroundColor: '#ffffff',        borderTopWidth: 1,        borderTopColor: '#f1f5f9'      }}>        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>          {currentStep > 1 ? (            <TouchableOpacity               style={{                paddingHorizontal: 24,                paddingVertical: 16,                borderWidth: 2,                borderColor: '#cbd5e1',                borderRadius: 12,                flex: 1,                marginRight: 12,                alignItems: 'center'              }}              onPress={prevStep}            >              <Text style={{ color: '#64748b', fontWeight: '600', fontSize: 16 }}>                ← Back              </Text>            </TouchableOpacity>          ) : (            <View style={{ flex: 1, marginRight: 12 }} />          )}          {currentStep < steps.length ? (            <TouchableOpacity               style={{                backgroundColor: '#6366f1',                paddingHorizontal: 24,                paddingVertical: 16,                borderRadius: 12,                flex: 1,                alignItems: 'center',                shadowColor: '#6366f1',                shadowOffset: { width: 0, height: 4 },                shadowOpacity: 0.3,                shadowRadius: 8,                elevation: 4              }}              onPress={nextStep}            >              <Text style={{ color: '#ffffff', fontWeight: '600', fontSize: 16 }}>                Next →              </Text>            </TouchableOpacity>          ) : (            <TouchableOpacity               style={{                backgroundColor: '#10b981',                paddingHorizontal: 24,                paddingVertical: 16,                borderRadius: 12,                flex: 1,                alignItems: 'center',                shadowColor: '#10b981',                shadowOffset: { width: 0, height: 4 },                shadowOpacity: 0.3,                shadowRadius: 8,                elevation: 4              }}              onPress={handleSubmit}            >              <Text style={{ color: '#ffffff', fontWeight: '600', fontSize: 16 }}>                🚀 Post Task              </Text>            </TouchableOpacity>          )}        </View>      </View>    </KeyboardAvoidingView>  );};export default NewTaskForm;